initSidebarItems({"struct":[["AndThen","Service for the `and_then` combinator, chaining a computation onto the end of another service which completes successfully."],["AndThenNewService","`AndThenNewService` new service combinator"],["Apply","`Apply` service combinator"],["ApplyNewService","`ApplyNewService` new service combinator"],["FnNewService",""],["FnService",""],["FromErr","Service for the `from_err` combinator, changing the error type of a service."],["FromErrNewService","NewService for the `from_err` combinator, changing the type of a new service's error."],["Map","Service for the `map` combinator, changing the type of a service's response."],["MapErr","Service for the `map_err` combinator, changing the type of a service's error."],["MapErrNewService","NewService for the `map_err` combinator, changing the type of a new service's error."],["MapInitErr","`MapInitErr` service combinator"],["MapNewService","`MapNewService` new service combinator"],["Then","Service for the `then` combinator, chaining a computation onto the end of another service."],["ThenNewService","`ThenNewService` new service combinator"]],"trait":[["IntoNewService","Trait for types that can be converted to a Service"],["IntoService","Trait for types that can be converted to a `Service`"],["NewService","Creates new `Service` values."],["NewServiceExt",""],["Service","An asynchronous function from `Request` to a `Response`."],["ServiceExt","An extension trait for `Service`s that provides a variety of convenient adapters"]]});